language: cpp
dist: xenial
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: COMPILER=gcc GCC=4.9 PY=3
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5 PY=3
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5 PY=2
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: COMPILER=gcc GCC=6 PY=3
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=gcc GCC=7 PY=3
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-4.0
          packages:
            - g++-4.9
            - clang-4.0
      env: COMPILER=clang CLANG=4.0 PY=3
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-5.0
          packages:
            - g++-4.9
            - clang-5.0
      env: COMPILER=clang CLANG=5.0 PY=3
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-6.0
          packages:
            - clang-6.0
      env: COMPILER=clang CLANG=6.0 PY=3
    - os: osx
      osx_image: xcode8
      compiler: clang
      env: PY=3
env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
before_install:
    - |
      # Configure build variables
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$COMPILER" == "gcc" ]]; then
          export CXX=g++-$GCC CC=gcc-$GCC;
        fi
        if [[ "$COMPILER" == "clang" ]]; then
          export CXX=clang++-$CLANG CC=clang-$CLANG;
        fi
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export CXX=clang++ CC=clang PYTHONHOME=$HOME/miniconda;
      fi
    - PYBIND11_VERSION=${PYBIND11_VERSION:-2.4.3}

install:
    # Define the version of miniconda to download
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
        cat /proc/cpuinfo;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - if [[ "$PY" == "3" ]]; then
          wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
          PY_EXE=$HOME/miniconda/bin/python3.7;
      else
          wget "http://repo.continuum.io/miniconda/Miniconda2-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
          PY_EXE=$HOME/miniconda/bin/python2.7;
      fi
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Useful for debugging any issues with conda
    - conda info -a
    - conda install pytest numpy -c conda-forge
    - conda install cmake -c conda-forge
    - |
      if [[ "$PYBIND11_VERSION" == "master" ]]; then
        conda_root=$(cd $(dirname $(which conda))/.. && pwd)
        mkdir -p $conda_root/tmp
        cd $conda_root/tmp
        curl -sSL -o pybind11.tar.gz https://github.com/pybind/pybind11/archive/master.tar.gz
        rm -rf pybind11-master
        tar xf pybind11.tar.gz
        cd pybind11-master
        python setup.py install
        mkdir -p build
        cd build
        cmake -DPYBIND11_TEST=OFF -DPYTHON_EXECUTABLE:FILEPATH=`which python` -DCMAKE_INSTALL_PREFIX=${conda_root} ..
        make install
        cd $TRAVIS_BUILD_DIR
      else
        conda install pybind11==${PYBIND11_VERSION} -c conda-forge
      fi
    - conda install xtensor==0.21.4 -c conda-forge
    - cmake -D DOWNLOAD_GTEST=ON -D CMAKE_INSTALL_PREFIX=$HOME/miniconda -D PYTHON_EXECUTABLE=$PY_EXE .
    - make -j2 test_xtensor_python
    - make install
    - rm -rf test/googletest-src

script:
    - py.test -s
    - cd test
    - ./test_xtensor_python

